version: '3.7'

volumes:
  kong_data: {}
  konga_data: {}
  keycloak_data: {}

networks:
  kong-net:
    external: false
  konga-net:
    external: false
  keycloak-net:
    external: false

services:
  kong-migrations:
    image: kong:latest
    command: kong migrations bootstrap
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-db
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
#    restart: on-failure
    secrets:
      - kong_postgres_password
    networks:
      - kong-net

  kong-migrations-up:
    image: kong:latest
    command: kong migrations up && kong migrations finish
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-db
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
#    restart: on-failure
    secrets:
      - kong_postgres_password
    networks:
      - kong-net

  kong:
    build: kong/.
    user: "${KONG_USER:-kong}"
    depends_on:
      - kong-db
      - kong-migrations
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-db
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
      KONG_PLUGINS: bundled,oidc,kong-spec-expose
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    ports:
      - "8000:8000/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "8443:8443/tcp"
      - "127.0.0.1:8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    deploy:
      restart_policy:
        condition: on-failure

  konga-prepare:
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://konga:konga@konga-db:5432/konga"
    networks:
      - konga-net
    restart: on-failure
    depends_on:
      - konga-db

  konga:
    image: pantsel/konga
    depends_on:
      - konga-db
    networks:
      - kong-net
      - konga-net
      - keycloak-net
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://konga:konga@konga-db:5432/konga
      NODE_ENV: production
    ports:
      - "1337:1337/tcp"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:1337"]
      interval: 10s
      timeout: 10s
      retries: 10
    deploy:
      restart_policy:
        condition: on-failure

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    restart: on-failure
    networks:
      - keycloak-net
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak-db
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: keycloak
    ports:
      - "8080:8080"
    depends_on:
      - keycloak-db
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/auth/realms/master"]
      interval: 30s
      timeout: 30s
      retries: 3

    
  kong-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data

  konga-db:
    image: postgres:9.6
    environment:
      POSTGRES_DB: konga
      POSTGRES_USER: konga
      POSTGRES_PASSWORD: konga
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "konga"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - konga-net
    volumes:
      - konga_data:/var/lib/postgresql/data

  keycloak-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - keycloak-net
    volumes:
      - keycloak_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    ports:
      - "8888:8080/tcp"
    networks:
      - keycloak-net
      - konga-net
      - kong-net
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080"]
      interval: 30s
      timeout: 30s
      retries: 3

secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD
